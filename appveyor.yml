environment:
  # There is no need to run the build for all the Python version /
  # architectures combo as the generated joblib wheel is the same on all
  # platforms (universal wheel).
  # We run the tests on 2 different target platforms for testing purpose only.
  matrix:
    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python34-x64"
      PYTHON_VERSION: "3.4.x"
      PYTHON_ARCH: "64"

install:
  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - "powershell ./appveyor/install.ps1"
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Install the build and runtime dependencies of the project.
  - "pip install --trusted-host 28daf2247a33ed269873-7b1aad3fab3cc330e1fd9d109892382a.r6.cf2.rackcdn.com -r appveyor/requirements.txt"
  - "python setup.py bdist_wheel"
  - ps: "ls dist"

  # Install the generated wheel package to test it
  - "pip install --pre --no-index --find-links dist/ joblib"

# Not a .NET project, we build in the install step instead
build: false

test_script:
  # Change to a non-source folder to make sure we run the tests on the
  # installed library.
  - "cd C:\\"
  - "py.test --pyargs joblib"

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
  - path: dist\*

#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse
